{
	"id": "10088d52a7c2c56a2e7c4239b55bc559",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.4.26",
	"solcLongVersion": "0.4.26+commit.4563c3fc",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Production.sol": {
				"content": "pragma solidity ^0.4.17;\r\n\r\ncontract Production {\r\n\r\n     struct Product {\r\n        bytes32[] serialNo;\r\n        bytes32[] registered;\r\n        uint regNo;\r\n    }\r\n\r\n    Product product;\r\n\r\n    function setProduct(string memory a) private {\r\n        bytes32 hash = keccak256(abi.encodePacked(a));\r\n        product.serialNo.push(hash);\r\n\r\n        for (uint i = 1; i<10; i++) {\r\n            bytes32 serial = keccak256(abi.encodePacked(product.serialNo[i-1]));\r\n            product.serialNo.push(serial);\r\n        }\r\n    }\r\n\r\n    function checkSerial(uint n, bytes32 sn) public view returns(bool) {\r\n        if (sn == product.serialNo[n]) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    function bytes32ToString(bytes32 _bytes32) private pure returns (string memory) {\r\n        uint8 i = 0;\r\n        while(i < 32 && _bytes32[i] != 0) {\r\n            i++;\r\n        }\r\n        bytes memory bytesArray = new bytes(i);\r\n        for (i = 0; i < 32 && _bytes32[i] != 0; i++) {\r\n            bytesArray[i] = _bytes32[i];\r\n        }\r\n        return string(bytesArray);\r\n    }\r\n\r\n    function regWarranty(uint Num, bytes32 regSer) public {\r\n        if (product.serialNo[Num] == regSer) {\r\n            product.registered.push(regSer);\r\n            product.regNo++;\r\n        }\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/Production.sol": {
				"Production": {
					"abi": [
						{
							"constant": false,
							"inputs": [
								{
									"name": "Num",
									"type": "uint256"
								},
								{
									"name": "regSer",
									"type": "bytes32"
								}
							],
							"name": "regWarranty",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "n",
									"type": "uint256"
								},
								{
									"name": "sn",
									"type": "bytes32"
								}
							],
							"name": "checkSerial",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/Production.sol\":28:1320  contract Production {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x0\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"contracts/Production.sol\":28:1320  contract Production {\r... */\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Production.sol\":28:1320  contract Production {\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x4))\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0x4716d27a\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x60eaf1df\n      eq\n      tag_3\n      jumpi\n    tag_1:\n      0x0\n      dup1\n      revert\n        /* \"contracts/Production.sol\":1120:1317  function regWarranty(uint Num, bytes32 regSer) public {\r... */\n    tag_2:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_4\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_4:\n        /* \"contracts/Production.sol\":1120:1317  function regWarranty(uint Num, bytes32 regSer) public {\r... */\n      pop\n      tag_5\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      not(0x0)\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_6)\n    tag_5:\n      stop\n        /* \"contracts/Production.sol\":527:726  function checkSerial(uint n, bytes32 sn) public view returns(bool) {\r... */\n    tag_3:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_7\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_7:\n        /* \"contracts/Production.sol\":527:726  function checkSerial(uint n, bytes32 sn) public view returns(bool) {\r... */\n      pop\n      tag_8\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      not(0x0)\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_9)\n    tag_8:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Production.sol\":1120:1317  function regWarranty(uint Num, bytes32 regSer) public {\r... */\n    tag_6:\n        /* \"contracts/Production.sol\":1214:1220  regSer */\n      dup1\n        /* \"contracts/Production.sol\":1189:1220  product.serialNo[Num] == regSer */\n      not(0x0)\n      and\n        /* \"contracts/Production.sol\":1189:1196  product */\n      0x0\n        /* \"contracts/Production.sol\":1189:1205  product.serialNo */\n      dup1\n      add\n        /* \"contracts/Production.sol\":1206:1209  Num */\n      dup4\n        /* \"contracts/Production.sol\":1189:1210  product.serialNo[Num] */\n      dup2\n      sload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_11\n      jumpi\n      invalid\n    tag_11:\n      swap1\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      add\n      sload\n        /* \"contracts/Production.sol\":1189:1220  product.serialNo[Num] == regSer */\n      not(0x0)\n      and\n      eq\n        /* \"contracts/Production.sol\":1185:1310  if (product.serialNo[Num] == regSer) {\r... */\n      iszero\n      tag_13\n      jumpi\n        /* \"contracts/Production.sol\":1237:1244  product */\n      0x0\n        /* \"contracts/Production.sol\":1237:1255  product.registered */\n      0x1\n      add\n        /* \"contracts/Production.sol\":1261:1267  regSer */\n      dup2\n        /* \"contracts/Production.sol\":1237:1268  product.registered.push(regSer) */\n      swap1\n      dup1\n        /* \"--CODEGEN--\":39:40   */\n      0x1\n        /* \"--CODEGEN--\":33:36   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      sload\n        /* \"--CODEGEN--\":23:41   */\n      add\n        /* \"--CODEGEN--\":57:67   */\n      dup1\n        /* \"--CODEGEN--\":52:55   */\n      dup3\n        /* \"--CODEGEN--\":45:68   */\n      sstore\n        /* \"--CODEGEN--\":79:89   */\n      dup1\n        /* \"--CODEGEN--\":72:89   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":0:93   */\n      pop\n        /* \"contracts/Production.sol\":1237:1268  product.registered.push(regSer) */\n      swap1\n      0x1\n      dup3\n      sub\n      swap1\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      add\n      0x0\n      swap1\n      swap2\n      swap3\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      swap1\n      not(0x0)\n      and\n      swap1\n      sstore\n      pop\n        /* \"contracts/Production.sol\":1283:1290  product */\n      0x0\n        /* \"contracts/Production.sol\":1283:1296  product.regNo */\n      0x2\n      add\n      0x0\n        /* \"contracts/Production.sol\":1283:1298  product.regNo++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      0x1\n      add\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"contracts/Production.sol\":1185:1310  if (product.serialNo[Num] == regSer) {\r... */\n    tag_13:\n        /* \"contracts/Production.sol\":1120:1317  function regWarranty(uint Num, bytes32 regSer) public {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Production.sol\":527:726  function checkSerial(uint n, bytes32 sn) public view returns(bool) {\r... */\n    tag_9:\n        /* \"contracts/Production.sol\":588:592  bool */\n      0x0\n        /* \"contracts/Production.sol\":615:622  product */\n      dup1\n        /* \"contracts/Production.sol\":615:631  product.serialNo */\n      0x0\n      add\n        /* \"contracts/Production.sol\":632:633  n */\n      dup4\n        /* \"contracts/Production.sol\":615:634  product.serialNo[n] */\n      dup2\n      sload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_16\n      jumpi\n      invalid\n    tag_16:\n      swap1\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      add\n      sload\n        /* \"contracts/Production.sol\":609:634  sn == product.serialNo[n] */\n      not(0x0)\n      and\n        /* \"contracts/Production.sol\":609:611  sn */\n      dup3\n        /* \"contracts/Production.sol\":609:634  sn == product.serialNo[n] */\n      not(0x0)\n      and\n      eq\n        /* \"contracts/Production.sol\":605:719  if (sn == product.serialNo[n]) {\r... */\n      iszero\n      tag_18\n      jumpi\n        /* \"contracts/Production.sol\":658:662  true */\n      0x1\n        /* \"contracts/Production.sol\":651:662  return true */\n      swap1\n      pop\n      jump(tag_15)\n        /* \"contracts/Production.sol\":605:719  if (sn == product.serialNo[n]) {\r... */\n    tag_18:\n        /* \"contracts/Production.sol\":702:707  false */\n      0x0\n        /* \"contracts/Production.sol\":695:707  return false */\n      swap1\n      pop\n        /* \"contracts/Production.sol\":527:726  function checkSerial(uint n, bytes32 sn) public view returns(bool) {\r... */\n    tag_15:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa165627a7a723058206bfe57a3d1d7f34874eeb194d5c4aa4c4e6e8d5c289743a9b681f3e1860e59e40029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506101c6806100206000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680634716d27a1461005157806360eaf1df1461008c575b600080fd5b34801561005d57600080fd5b5061008a6004803603810190808035906020019092919080356000191690602001909291905050506100df565b005b34801561009857600080fd5b506100c5600480360381019080803590602001909291908035600019169060200190929190505050610159565b604051808215151515815260200191505060405180910390f35b806000191660008001838154811015156100f557fe5b90600052602060002001546000191614156101555760006001018190806001815401808255809150509060018203906000526020600020016000909192909190915090600019169055506000600201600081548092919060010191905055505b5050565b6000806000018381548110151561016c57fe5b9060005260206000200154600019168260001916141561018f5760019050610194565b600090505b929150505600a165627a7a723058206bfe57a3d1d7f34874eeb194d5c4aa4c4e6e8d5c289743a9b681f3e1860e59e40029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C6 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x4716D27A EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x60EAF1DF EQ PUSH2 0x8C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 0x0 NOT AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xDF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x98 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 0x0 NOT AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x159 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST DUP1 PUSH1 0x0 NOT AND PUSH1 0x0 DUP1 ADD DUP4 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0xF5 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x0 NOT AND EQ ISZERO PUSH2 0x155 JUMPI PUSH1 0x0 PUSH1 0x1 ADD DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP SWAP1 PUSH1 0x1 DUP3 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 SWAP2 POP SWAP1 PUSH1 0x0 NOT AND SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x2 ADD PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE POP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 ADD DUP4 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x16C JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x0 NOT AND DUP3 PUSH1 0x0 NOT AND EQ ISZERO PUSH2 0x18F JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x194 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 PUSH12 0xFE57A3D1D7F34874EEB194D5 0xc4 0xaa 0x4c 0x4e PUSH15 0x8D5C289743A9B681F3E1860E59E400 0x29 ",
							"sourceMap": "28:1292:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;28:1292:0;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "60806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680634716d27a1461005157806360eaf1df1461008c575b600080fd5b34801561005d57600080fd5b5061008a6004803603810190808035906020019092919080356000191690602001909291905050506100df565b005b34801561009857600080fd5b506100c5600480360381019080803590602001909291908035600019169060200190929190505050610159565b604051808215151515815260200191505060405180910390f35b806000191660008001838154811015156100f557fe5b90600052602060002001546000191614156101555760006001018190806001815401808255809150509060018203906000526020600020016000909192909190915090600019169055506000600201600081548092919060010191905055505b5050565b6000806000018381548110151561016c57fe5b9060005260206000200154600019168260001916141561018f5760019050610194565b600090505b929150505600a165627a7a723058206bfe57a3d1d7f34874eeb194d5c4aa4c4e6e8d5c289743a9b681f3e1860e59e40029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x4716D27A EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x60EAF1DF EQ PUSH2 0x8C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 0x0 NOT AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xDF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x98 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 0x0 NOT AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x159 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST DUP1 PUSH1 0x0 NOT AND PUSH1 0x0 DUP1 ADD DUP4 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0xF5 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x0 NOT AND EQ ISZERO PUSH2 0x155 JUMPI PUSH1 0x0 PUSH1 0x1 ADD DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP SWAP1 PUSH1 0x1 DUP3 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 SWAP2 POP SWAP1 PUSH1 0x0 NOT AND SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x2 ADD PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE POP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 ADD DUP4 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x16C JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x0 NOT AND DUP3 PUSH1 0x0 NOT AND EQ ISZERO PUSH2 0x18F JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x194 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 PUSH12 0xFE57A3D1D7F34874EEB194D5 0xc4 0xaa 0x4c 0x4e PUSH15 0x8D5C289743A9B681F3E1860E59E400 0x29 ",
							"sourceMap": "28:1292:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1120:197;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1120:197:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;527:199;;8:9:-1;5:2;;;30:1;27;20:12;5:2;527:199:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1120:197;1214:6;1189:31;;;:7;:16;;1206:3;1189:21;;;;;;;;;;;;;;;;;;:31;;;;1185:125;;;1237:7;:18;;1261:6;1237:31;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1237:31:0;;;;;;;;;;;;;;;;;;;;;;;;;;;1283:7;:13;;;:15;;;;;;;;;;;;;1185:125;1120:197;;:::o;527:199::-;588:4;615:7;:16;;632:1;615:19;;;;;;;;;;;;;;;;;;609:25;;;:2;:25;;;;605:114;;;658:4;651:11;;;;605:114;702:5;695:12;;527:199;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "90800",
								"executionCost": "141",
								"totalCost": "90941"
							},
							"external": {
								"checkSerial(uint256,bytes32)": "882",
								"regWarranty(uint256,bytes32)": "61360"
							},
							"internal": {
								"bytes32ToString(bytes32)": "infinite",
								"setProduct(string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 28,
									"end": 1320,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 28,
									"end": 1320,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 28,
									"end": 1320,
									"name": "MSTORE"
								},
								{
									"begin": 28,
									"end": 1320,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 28,
									"end": 1320,
									"name": "POP"
								},
								{
									"begin": 28,
									"end": 1320,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 28,
									"end": 1320,
									"name": "DUP1"
								},
								{
									"begin": 28,
									"end": 1320,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 28,
									"end": 1320,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 28,
									"end": 1320,
									"name": "CODECOPY"
								},
								{
									"begin": 28,
									"end": 1320,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 28,
									"end": 1320,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a723058206bfe57a3d1d7f34874eeb194d5c4aa4c4e6e8d5c289743a9b681f3e1860e59e40029",
									".code": [
										{
											"begin": 28,
											"end": 1320,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 28,
											"end": 1320,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 28,
											"end": 1320,
											"name": "MSTORE"
										},
										{
											"begin": 28,
											"end": 1320,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 28,
											"end": 1320,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 28,
											"end": 1320,
											"name": "LT"
										},
										{
											"begin": 28,
											"end": 1320,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 28,
											"end": 1320,
											"name": "JUMPI"
										},
										{
											"begin": 28,
											"end": 1320,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 28,
											"end": 1320,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 28,
											"end": 1320,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 28,
											"end": 1320,
											"name": "SWAP1"
										},
										{
											"begin": 28,
											"end": 1320,
											"name": "DIV"
										},
										{
											"begin": 28,
											"end": 1320,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 28,
											"end": 1320,
											"name": "AND"
										},
										{
											"begin": 28,
											"end": 1320,
											"name": "DUP1"
										},
										{
											"begin": 28,
											"end": 1320,
											"name": "PUSH",
											"value": "4716D27A"
										},
										{
											"begin": 28,
											"end": 1320,
											"name": "EQ"
										},
										{
											"begin": 28,
											"end": 1320,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 28,
											"end": 1320,
											"name": "JUMPI"
										},
										{
											"begin": 28,
											"end": 1320,
											"name": "DUP1"
										},
										{
											"begin": 28,
											"end": 1320,
											"name": "PUSH",
											"value": "60EAF1DF"
										},
										{
											"begin": 28,
											"end": 1320,
											"name": "EQ"
										},
										{
											"begin": 28,
											"end": 1320,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 28,
											"end": 1320,
											"name": "JUMPI"
										},
										{
											"begin": 28,
											"end": 1320,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 28,
											"end": 1320,
											"name": "JUMPDEST"
										},
										{
											"begin": 28,
											"end": 1320,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 28,
											"end": 1320,
											"name": "DUP1"
										},
										{
											"begin": 28,
											"end": 1320,
											"name": "REVERT"
										},
										{
											"begin": 1120,
											"end": 1317,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 1120,
											"end": 1317,
											"name": "JUMPDEST"
										},
										{
											"begin": 1120,
											"end": 1317,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1120,
											"end": 1317,
											"name": "POP"
										},
										{
											"begin": 1120,
											"end": 1317,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 1120,
											"end": 1317,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1120,
											"end": 1317,
											"name": "DUP1"
										},
										{
											"begin": 1120,
											"end": 1317,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1120,
											"end": 1317,
											"name": "SUB"
										},
										{
											"begin": 1120,
											"end": 1317,
											"name": "DUP2"
										},
										{
											"begin": 1120,
											"end": 1317,
											"name": "ADD"
										},
										{
											"begin": 1120,
											"end": 1317,
											"name": "SWAP1"
										},
										{
											"begin": 1120,
											"end": 1317,
											"name": "DUP1"
										},
										{
											"begin": 1120,
											"end": 1317,
											"name": "DUP1"
										},
										{
											"begin": 1120,
											"end": 1317,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1120,
											"end": 1317,
											"name": "SWAP1"
										},
										{
											"begin": 1120,
											"end": 1317,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1120,
											"end": 1317,
											"name": "ADD"
										},
										{
											"begin": 1120,
											"end": 1317,
											"name": "SWAP1"
										},
										{
											"begin": 1120,
											"end": 1317,
											"name": "SWAP3"
										},
										{
											"begin": 1120,
											"end": 1317,
											"name": "SWAP2"
										},
										{
											"begin": 1120,
											"end": 1317,
											"name": "SWAP1"
										},
										{
											"begin": 1120,
											"end": 1317,
											"name": "DUP1"
										},
										{
											"begin": 1120,
											"end": 1317,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1120,
											"end": 1317,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1120,
											"end": 1317,
											"name": "NOT"
										},
										{
											"begin": 1120,
											"end": 1317,
											"name": "AND"
										},
										{
											"begin": 1120,
											"end": 1317,
											"name": "SWAP1"
										},
										{
											"begin": 1120,
											"end": 1317,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1120,
											"end": 1317,
											"name": "ADD"
										},
										{
											"begin": 1120,
											"end": 1317,
											"name": "SWAP1"
										},
										{
											"begin": 1120,
											"end": 1317,
											"name": "SWAP3"
										},
										{
											"begin": 1120,
											"end": 1317,
											"name": "SWAP2"
										},
										{
											"begin": 1120,
											"end": 1317,
											"name": "SWAP1"
										},
										{
											"begin": 1120,
											"end": 1317,
											"name": "POP"
										},
										{
											"begin": 1120,
											"end": 1317,
											"name": "POP"
										},
										{
											"begin": 1120,
											"end": 1317,
											"name": "POP"
										},
										{
											"begin": 1120,
											"end": 1317,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 1120,
											"end": 1317,
											"name": "JUMP"
										},
										{
											"begin": 1120,
											"end": 1317,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 1120,
											"end": 1317,
											"name": "JUMPDEST"
										},
										{
											"begin": 1120,
											"end": 1317,
											"name": "STOP"
										},
										{
											"begin": 527,
											"end": 726,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 527,
											"end": 726,
											"name": "JUMPDEST"
										},
										{
											"begin": 527,
											"end": 726,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 527,
											"end": 726,
											"name": "POP"
										},
										{
											"begin": 527,
											"end": 726,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 527,
											"end": 726,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 527,
											"end": 726,
											"name": "DUP1"
										},
										{
											"begin": 527,
											"end": 726,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 527,
											"end": 726,
											"name": "SUB"
										},
										{
											"begin": 527,
											"end": 726,
											"name": "DUP2"
										},
										{
											"begin": 527,
											"end": 726,
											"name": "ADD"
										},
										{
											"begin": 527,
											"end": 726,
											"name": "SWAP1"
										},
										{
											"begin": 527,
											"end": 726,
											"name": "DUP1"
										},
										{
											"begin": 527,
											"end": 726,
											"name": "DUP1"
										},
										{
											"begin": 527,
											"end": 726,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 527,
											"end": 726,
											"name": "SWAP1"
										},
										{
											"begin": 527,
											"end": 726,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 527,
											"end": 726,
											"name": "ADD"
										},
										{
											"begin": 527,
											"end": 726,
											"name": "SWAP1"
										},
										{
											"begin": 527,
											"end": 726,
											"name": "SWAP3"
										},
										{
											"begin": 527,
											"end": 726,
											"name": "SWAP2"
										},
										{
											"begin": 527,
											"end": 726,
											"name": "SWAP1"
										},
										{
											"begin": 527,
											"end": 726,
											"name": "DUP1"
										},
										{
											"begin": 527,
											"end": 726,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 527,
											"end": 726,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 527,
											"end": 726,
											"name": "NOT"
										},
										{
											"begin": 527,
											"end": 726,
											"name": "AND"
										},
										{
											"begin": 527,
											"end": 726,
											"name": "SWAP1"
										},
										{
											"begin": 527,
											"end": 726,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 527,
											"end": 726,
											"name": "ADD"
										},
										{
											"begin": 527,
											"end": 726,
											"name": "SWAP1"
										},
										{
											"begin": 527,
											"end": 726,
											"name": "SWAP3"
										},
										{
											"begin": 527,
											"end": 726,
											"name": "SWAP2"
										},
										{
											"begin": 527,
											"end": 726,
											"name": "SWAP1"
										},
										{
											"begin": 527,
											"end": 726,
											"name": "POP"
										},
										{
											"begin": 527,
											"end": 726,
											"name": "POP"
										},
										{
											"begin": 527,
											"end": 726,
											"name": "POP"
										},
										{
											"begin": 527,
											"end": 726,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 527,
											"end": 726,
											"name": "JUMP"
										},
										{
											"begin": 527,
											"end": 726,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 527,
											"end": 726,
											"name": "JUMPDEST"
										},
										{
											"begin": 527,
											"end": 726,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 527,
											"end": 726,
											"name": "MLOAD"
										},
										{
											"begin": 527,
											"end": 726,
											"name": "DUP1"
										},
										{
											"begin": 527,
											"end": 726,
											"name": "DUP3"
										},
										{
											"begin": 527,
											"end": 726,
											"name": "ISZERO"
										},
										{
											"begin": 527,
											"end": 726,
											"name": "ISZERO"
										},
										{
											"begin": 527,
											"end": 726,
											"name": "ISZERO"
										},
										{
											"begin": 527,
											"end": 726,
											"name": "ISZERO"
										},
										{
											"begin": 527,
											"end": 726,
											"name": "DUP2"
										},
										{
											"begin": 527,
											"end": 726,
											"name": "MSTORE"
										},
										{
											"begin": 527,
											"end": 726,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 527,
											"end": 726,
											"name": "ADD"
										},
										{
											"begin": 527,
											"end": 726,
											"name": "SWAP2"
										},
										{
											"begin": 527,
											"end": 726,
											"name": "POP"
										},
										{
											"begin": 527,
											"end": 726,
											"name": "POP"
										},
										{
											"begin": 527,
											"end": 726,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 527,
											"end": 726,
											"name": "MLOAD"
										},
										{
											"begin": 527,
											"end": 726,
											"name": "DUP1"
										},
										{
											"begin": 527,
											"end": 726,
											"name": "SWAP2"
										},
										{
											"begin": 527,
											"end": 726,
											"name": "SUB"
										},
										{
											"begin": 527,
											"end": 726,
											"name": "SWAP1"
										},
										{
											"begin": 527,
											"end": 726,
											"name": "RETURN"
										},
										{
											"begin": 1120,
											"end": 1317,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 1120,
											"end": 1317,
											"name": "JUMPDEST"
										},
										{
											"begin": 1214,
											"end": 1220,
											"name": "DUP1"
										},
										{
											"begin": 1189,
											"end": 1220,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1189,
											"end": 1220,
											"name": "NOT"
										},
										{
											"begin": 1189,
											"end": 1220,
											"name": "AND"
										},
										{
											"begin": 1189,
											"end": 1196,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1189,
											"end": 1205,
											"name": "DUP1"
										},
										{
											"begin": 1189,
											"end": 1205,
											"name": "ADD"
										},
										{
											"begin": 1206,
											"end": 1209,
											"name": "DUP4"
										},
										{
											"begin": 1189,
											"end": 1210,
											"name": "DUP2"
										},
										{
											"begin": 1189,
											"end": 1210,
											"name": "SLOAD"
										},
										{
											"begin": 1189,
											"end": 1210,
											"name": "DUP2"
										},
										{
											"begin": 1189,
											"end": 1210,
											"name": "LT"
										},
										{
											"begin": 1189,
											"end": 1210,
											"name": "ISZERO"
										},
										{
											"begin": 1189,
											"end": 1210,
											"name": "ISZERO"
										},
										{
											"begin": 1189,
											"end": 1210,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 1189,
											"end": 1210,
											"name": "JUMPI"
										},
										{
											"begin": 1189,
											"end": 1210,
											"name": "INVALID"
										},
										{
											"begin": 1189,
											"end": 1210,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 1189,
											"end": 1210,
											"name": "JUMPDEST"
										},
										{
											"begin": 1189,
											"end": 1210,
											"name": "SWAP1"
										},
										{
											"begin": 1189,
											"end": 1210,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1189,
											"end": 1210,
											"name": "MSTORE"
										},
										{
											"begin": 1189,
											"end": 1210,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1189,
											"end": 1210,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1189,
											"end": 1210,
											"name": "KECCAK256"
										},
										{
											"begin": 1189,
											"end": 1210,
											"name": "ADD"
										},
										{
											"begin": 1189,
											"end": 1210,
											"name": "SLOAD"
										},
										{
											"begin": 1189,
											"end": 1220,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1189,
											"end": 1220,
											"name": "NOT"
										},
										{
											"begin": 1189,
											"end": 1220,
											"name": "AND"
										},
										{
											"begin": 1189,
											"end": 1220,
											"name": "EQ"
										},
										{
											"begin": 1185,
											"end": 1310,
											"name": "ISZERO"
										},
										{
											"begin": 1185,
											"end": 1310,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 1185,
											"end": 1310,
											"name": "JUMPI"
										},
										{
											"begin": 1237,
											"end": 1244,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1237,
											"end": 1255,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1237,
											"end": 1255,
											"name": "ADD"
										},
										{
											"begin": 1261,
											"end": 1267,
											"name": "DUP2"
										},
										{
											"begin": 1237,
											"end": 1268,
											"name": "SWAP1"
										},
										{
											"begin": 1237,
											"end": 1268,
											"name": "DUP1"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "SLOAD"
										},
										{
											"begin": 23,
											"end": 41,
											"name": "ADD"
										},
										{
											"begin": 57,
											"end": 67,
											"name": "DUP1"
										},
										{
											"begin": 52,
											"end": 55,
											"name": "DUP3"
										},
										{
											"begin": 45,
											"end": 68,
											"name": "SSTORE"
										},
										{
											"begin": 79,
											"end": 89,
											"name": "DUP1"
										},
										{
											"begin": 72,
											"end": 89,
											"name": "SWAP2"
										},
										{
											"begin": 72,
											"end": 89,
											"name": "POP"
										},
										{
											"begin": 0,
											"end": 93,
											"name": "POP"
										},
										{
											"begin": 1237,
											"end": 1268,
											"name": "SWAP1"
										},
										{
											"begin": 1237,
											"end": 1268,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1237,
											"end": 1268,
											"name": "DUP3"
										},
										{
											"begin": 1237,
											"end": 1268,
											"name": "SUB"
										},
										{
											"begin": 1237,
											"end": 1268,
											"name": "SWAP1"
										},
										{
											"begin": 1237,
											"end": 1268,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1237,
											"end": 1268,
											"name": "MSTORE"
										},
										{
											"begin": 1237,
											"end": 1268,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1237,
											"end": 1268,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1237,
											"end": 1268,
											"name": "KECCAK256"
										},
										{
											"begin": 1237,
											"end": 1268,
											"name": "ADD"
										},
										{
											"begin": 1237,
											"end": 1268,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1237,
											"end": 1268,
											"name": "SWAP1"
										},
										{
											"begin": 1237,
											"end": 1268,
											"name": "SWAP2"
										},
										{
											"begin": 1237,
											"end": 1268,
											"name": "SWAP3"
										},
										{
											"begin": 1237,
											"end": 1268,
											"name": "SWAP1"
										},
										{
											"begin": 1237,
											"end": 1268,
											"name": "SWAP2"
										},
										{
											"begin": 1237,
											"end": 1268,
											"name": "SWAP1"
										},
										{
											"begin": 1237,
											"end": 1268,
											"name": "SWAP2"
										},
										{
											"begin": 1237,
											"end": 1268,
											"name": "POP"
										},
										{
											"begin": 1237,
											"end": 1268,
											"name": "SWAP1"
										},
										{
											"begin": 1237,
											"end": 1268,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1237,
											"end": 1268,
											"name": "NOT"
										},
										{
											"begin": 1237,
											"end": 1268,
											"name": "AND"
										},
										{
											"begin": 1237,
											"end": 1268,
											"name": "SWAP1"
										},
										{
											"begin": 1237,
											"end": 1268,
											"name": "SSTORE"
										},
										{
											"begin": 1237,
											"end": 1268,
											"name": "POP"
										},
										{
											"begin": 1283,
											"end": 1290,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1283,
											"end": 1296,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1283,
											"end": 1296,
											"name": "ADD"
										},
										{
											"begin": 1283,
											"end": 1296,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1283,
											"end": 1298,
											"name": "DUP2"
										},
										{
											"begin": 1283,
											"end": 1298,
											"name": "SLOAD"
										},
										{
											"begin": 1283,
											"end": 1298,
											"name": "DUP1"
										},
										{
											"begin": 1283,
											"end": 1298,
											"name": "SWAP3"
										},
										{
											"begin": 1283,
											"end": 1298,
											"name": "SWAP2"
										},
										{
											"begin": 1283,
											"end": 1298,
											"name": "SWAP1"
										},
										{
											"begin": 1283,
											"end": 1298,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1283,
											"end": 1298,
											"name": "ADD"
										},
										{
											"begin": 1283,
											"end": 1298,
											"name": "SWAP2"
										},
										{
											"begin": 1283,
											"end": 1298,
											"name": "SWAP1"
										},
										{
											"begin": 1283,
											"end": 1298,
											"name": "POP"
										},
										{
											"begin": 1283,
											"end": 1298,
											"name": "SSTORE"
										},
										{
											"begin": 1283,
											"end": 1298,
											"name": "POP"
										},
										{
											"begin": 1185,
											"end": 1310,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 1185,
											"end": 1310,
											"name": "JUMPDEST"
										},
										{
											"begin": 1120,
											"end": 1317,
											"name": "POP"
										},
										{
											"begin": 1120,
											"end": 1317,
											"name": "POP"
										},
										{
											"begin": 1120,
											"end": 1317,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 527,
											"end": 726,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 527,
											"end": 726,
											"name": "JUMPDEST"
										},
										{
											"begin": 588,
											"end": 592,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 615,
											"end": 622,
											"name": "DUP1"
										},
										{
											"begin": 615,
											"end": 631,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 615,
											"end": 631,
											"name": "ADD"
										},
										{
											"begin": 632,
											"end": 633,
											"name": "DUP4"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "DUP2"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "SLOAD"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "DUP2"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "LT"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "ISZERO"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "ISZERO"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "JUMPI"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "INVALID"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "JUMPDEST"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "SWAP1"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "MSTORE"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "KECCAK256"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "ADD"
										},
										{
											"begin": 615,
											"end": 634,
											"name": "SLOAD"
										},
										{
											"begin": 609,
											"end": 634,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 609,
											"end": 634,
											"name": "NOT"
										},
										{
											"begin": 609,
											"end": 634,
											"name": "AND"
										},
										{
											"begin": 609,
											"end": 611,
											"name": "DUP3"
										},
										{
											"begin": 609,
											"end": 634,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 609,
											"end": 634,
											"name": "NOT"
										},
										{
											"begin": 609,
											"end": 634,
											"name": "AND"
										},
										{
											"begin": 609,
											"end": 634,
											"name": "EQ"
										},
										{
											"begin": 605,
											"end": 719,
											"name": "ISZERO"
										},
										{
											"begin": 605,
											"end": 719,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 605,
											"end": 719,
											"name": "JUMPI"
										},
										{
											"begin": 658,
											"end": 662,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 651,
											"end": 662,
											"name": "SWAP1"
										},
										{
											"begin": 651,
											"end": 662,
											"name": "POP"
										},
										{
											"begin": 651,
											"end": 662,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 651,
											"end": 662,
											"name": "JUMP"
										},
										{
											"begin": 605,
											"end": 719,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 605,
											"end": 719,
											"name": "JUMPDEST"
										},
										{
											"begin": 702,
											"end": 707,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 695,
											"end": 707,
											"name": "SWAP1"
										},
										{
											"begin": 695,
											"end": 707,
											"name": "POP"
										},
										{
											"begin": 527,
											"end": 726,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 527,
											"end": 726,
											"name": "JUMPDEST"
										},
										{
											"begin": 527,
											"end": 726,
											"name": "SWAP3"
										},
										{
											"begin": 527,
											"end": 726,
											"name": "SWAP2"
										},
										{
											"begin": 527,
											"end": 726,
											"name": "POP"
										},
										{
											"begin": 527,
											"end": 726,
											"name": "POP"
										},
										{
											"begin": 527,
											"end": 726,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"checkSerial(uint256,bytes32)": "60eaf1df",
							"regWarranty(uint256,bytes32)": "4716d27a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.26+commit.4563c3fc\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"Num\",\"type\":\"uint256\"},{\"name\":\"regSer\",\"type\":\"bytes32\"}],\"name\":\"regWarranty\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"n\",\"type\":\"uint256\"},{\"name\":\"sn\",\"type\":\"bytes32\"}],\"name\":\"checkSerial\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/Production.sol\":\"Production\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Production.sol\":{\"keccak256\":\"0x16bab746a134686c35232291f93e7c964a1fce143c36991bb73dc406d34bfc20\",\"urls\":[\"bzzr://7d3d113b5878a42c2b8e9fc82b5f7281ba28abacee0cd39a1f7b5ba0f8448768\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"contracts/Production.sol": {
				"ast": {
					"absolutePath": "contracts/Production.sol",
					"exportedSymbols": {
						"Production": [
							185
						]
					},
					"id": 186,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 185,
							"linearizedBaseContracts": [
								185
							],
							"name": "Production",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Production.Product",
									"id": 10,
									"members": [
										{
											"constant": false,
											"id": 4,
											"name": "serialNo",
											"nodeType": "VariableDeclaration",
											"scope": 10,
											"src": "84:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
												"typeString": "bytes32[]"
											},
											"typeName": {
												"baseType": {
													"id": 2,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "84:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 3,
												"length": null,
												"nodeType": "ArrayTypeName",
												"src": "84:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
													"typeString": "bytes32[]"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 7,
											"name": "registered",
											"nodeType": "VariableDeclaration",
											"scope": 10,
											"src": "113:20:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
												"typeString": "bytes32[]"
											},
											"typeName": {
												"baseType": {
													"id": 5,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "113:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 6,
												"length": null,
												"nodeType": "ArrayTypeName",
												"src": "113:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
													"typeString": "bytes32[]"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 9,
											"name": "regNo",
											"nodeType": "VariableDeclaration",
											"scope": 10,
											"src": "144:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 8,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "144:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "Product",
									"nodeType": "StructDefinition",
									"scope": 185,
									"src": "58:104:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 12,
									"name": "product",
									"nodeType": "VariableDeclaration",
									"scope": 185,
									"src": "170:15:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Product_$10_storage",
										"typeString": "struct Production.Product"
									},
									"typeName": {
										"contractScope": null,
										"id": 11,
										"name": "Product",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 10,
										"src": "170:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Product_$10_storage_ptr",
											"typeString": "struct Production.Product"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 68,
										"nodeType": "Block",
										"src": "239:280:0",
										"statements": [
											{
												"assignments": [
													18
												],
												"declarations": [
													{
														"constant": false,
														"id": 18,
														"name": "hash",
														"nodeType": "VariableDeclaration",
														"scope": 69,
														"src": "250:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 17,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "250:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 25,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 22,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 14,
																	"src": "292:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 20,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 187,
																	"src": "275:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 21,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "275:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 23,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "275:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 19,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 194,
														"src": "265:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_sha3_pure$__$returns$_t_bytes32_$",
															"typeString": "function () pure returns (bytes32)"
														}
													},
													"id": 24,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "265:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "250:45:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 31,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 18,
															"src": "328:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 26,
																"name": "product",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 12,
																"src": "306:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Product_$10_storage",
																	"typeString": "struct Production.Product storage ref"
																}
															},
															"id": 29,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "serialNo",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4,
															"src": "306:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																"typeString": "bytes32[] storage ref"
															}
														},
														"id": 30,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "306:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_bytes32_$returns$_t_uint256_$",
															"typeString": "function (bytes32) returns (uint256)"
														}
													},
													"id": 32,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "306:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 33,
												"nodeType": "ExpressionStatement",
												"src": "306:27:0"
											},
											{
												"body": {
													"id": 66,
													"nodeType": "Block",
													"src": "374:138:0",
													"statements": [
														{
															"assignments": [
																45
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 45,
																	"name": "serial",
																	"nodeType": "VariableDeclaration",
																	"scope": 69,
																	"src": "389:14:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 44,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "389:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 57,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"baseExpression": {
																					"argumentTypes": null,
																					"expression": {
																						"argumentTypes": null,
																						"id": 49,
																						"name": "product",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 12,
																						"src": "433:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Product_$10_storage",
																							"typeString": "struct Production.Product storage ref"
																						}
																					},
																					"id": 50,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "serialNo",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 4,
																					"src": "433:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																						"typeString": "bytes32[] storage ref"
																					}
																				},
																				"id": 54,
																				"indexExpression": {
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 53,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"id": 51,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 35,
																						"src": "450:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"argumentTypes": null,
																						"hexValue": "31",
																						"id": 52,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "452:1:0",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"src": "450:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "433:21:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"id": 47,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 187,
																				"src": "416:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 48,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "encodePacked",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "416:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 55,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "416:39:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 46,
																	"name": "keccak256",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 194,
																	"src": "406:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_sha3_pure$__$returns$_t_bytes32_$",
																		"typeString": "function () pure returns (bytes32)"
																	}
																},
																"id": 56,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "406:50:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "389:67:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 63,
																		"name": "serial",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 45,
																		"src": "493:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 58,
																			"name": "product",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 12,
																			"src": "471:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Product_$10_storage",
																				"typeString": "struct Production.Product storage ref"
																			}
																		},
																		"id": 61,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "serialNo",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 4,
																		"src": "471:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 62,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "471:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_bytes32_$returns$_t_uint256_$",
																		"typeString": "function (bytes32) returns (uint256)"
																	}
																},
																"id": 64,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "471:29:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 65,
															"nodeType": "ExpressionStatement",
															"src": "471:29:0"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 40,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 38,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 35,
														"src": "363:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "3130",
														"id": 39,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "365:2:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"src": "363:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 67,
												"initializationExpression": {
													"assignments": [
														35
													],
													"declarations": [
														{
															"constant": false,
															"id": 35,
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 69,
															"src": "351:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 34,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "351:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 37,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 36,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "360:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "351:10:0"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 42,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "369:3:0",
														"subExpression": {
															"argumentTypes": null,
															"id": 41,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 35,
															"src": "369:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 43,
													"nodeType": "ExpressionStatement",
													"src": "369:3:0"
												},
												"nodeType": "ForStatement",
												"src": "346:166:0"
											}
										]
									},
									"documentation": null,
									"id": 69,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "setProduct",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "214:15:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 13,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "214:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "213:17:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "239:0:0"
									},
									"scope": 185,
									"src": "194:325:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 91,
										"nodeType": "Block",
										"src": "594:132:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 83,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 78,
														"name": "sn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 73,
														"src": "609:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 79,
																"name": "product",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 12,
																"src": "615:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Product_$10_storage",
																	"typeString": "struct Production.Product storage ref"
																}
															},
															"id": 80,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "serialNo",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4,
															"src": "615:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																"typeString": "bytes32[] storage ref"
															}
														},
														"id": 82,
														"indexExpression": {
															"argumentTypes": null,
															"id": 81,
															"name": "n",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "632:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "615:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "609:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 89,
													"nodeType": "Block",
													"src": "680:39:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 87,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "702:5:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 77,
															"id": 88,
															"nodeType": "Return",
															"src": "695:12:0"
														}
													]
												},
												"id": 90,
												"nodeType": "IfStatement",
												"src": "605:114:0",
												"trueBody": {
													"id": 86,
													"nodeType": "Block",
													"src": "636:38:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "74727565",
																"id": 84,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "658:4:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 77,
															"id": 85,
															"nodeType": "Return",
															"src": "651:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 92,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "checkSerial",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 74,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"name": "n",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "548:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "548:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 73,
												"name": "sn",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "556:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 72,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "556:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "547:20:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 76,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "588:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 75,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "588:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "587:6:0"
									},
									"scope": 185,
									"src": "527:199:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 154,
										"nodeType": "Block",
										"src": "814:298:0",
										"statements": [
											{
												"assignments": [
													100
												],
												"declarations": [
													{
														"constant": false,
														"id": 100,
														"name": "i",
														"nodeType": "VariableDeclaration",
														"scope": 155,
														"src": "825:7:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 99,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "825:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 102,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "30",
													"id": 101,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "835:1:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "825:11:0"
											},
											{
												"body": {
													"id": 115,
													"nodeType": "Block",
													"src": "881:30:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 113,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "896:3:0",
																"subExpression": {
																	"argumentTypes": null,
																	"id": 112,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 100,
																	"src": "896:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 114,
															"nodeType": "ExpressionStatement",
															"src": "896:3:0"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 105,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 103,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 100,
															"src": "853:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "3332",
															"id": 104,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "857:2:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_32_by_1",
																"typeString": "int_const 32"
															},
															"value": "32"
														},
														"src": "853:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 106,
																"name": "_bytes32",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 94,
																"src": "863:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 108,
															"indexExpression": {
																"argumentTypes": null,
																"id": 107,
																"name": "i",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 100,
																"src": "872:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "863:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes1",
																"typeString": "bytes1"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 109,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "878:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "863:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "853:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 116,
												"nodeType": "WhileStatement",
												"src": "847:64:0"
											},
											{
												"assignments": [
													118
												],
												"declarations": [
													{
														"constant": false,
														"id": 118,
														"name": "bytesArray",
														"nodeType": "VariableDeclaration",
														"scope": 155,
														"src": "921:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 117,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "921:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 123,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 121,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 100,
															"src": "957:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 120,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "947:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 119,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "951:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "947:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "921:38:0"
											},
											{
												"body": {
													"id": 148,
													"nodeType": "Block",
													"src": "1015:54:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 146,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 140,
																		"name": "bytesArray",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 118,
																		"src": "1030:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 142,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 141,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 100,
																		"src": "1041:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1030:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 143,
																		"name": "_bytes32",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 94,
																		"src": "1046:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"id": 145,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 144,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 100,
																		"src": "1055:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1046:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "1030:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 147,
															"nodeType": "ExpressionStatement",
															"src": "1030:27:0"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 130,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 128,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 100,
															"src": "982:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "3332",
															"id": 129,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "986:2:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_32_by_1",
																"typeString": "int_const 32"
															},
															"value": "32"
														},
														"src": "982:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														},
														"id": 135,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 131,
																"name": "_bytes32",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 94,
																"src": "992:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 133,
															"indexExpression": {
																"argumentTypes": null,
																"id": 132,
																"name": "i",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 100,
																"src": "1001:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "992:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes1",
																"typeString": "bytes1"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 134,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1007:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "992:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "982:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 149,
												"initializationExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 126,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"argumentTypes": null,
															"id": 124,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 100,
															"src": "975:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 125,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "979:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "975:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"id": 127,
													"nodeType": "ExpressionStatement",
													"src": "975:5:0"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 138,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1010:3:0",
														"subExpression": {
															"argumentTypes": null,
															"id": 137,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 100,
															"src": "1010:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"id": 139,
													"nodeType": "ExpressionStatement",
													"src": "1010:3:0"
												},
												"nodeType": "ForStatement",
												"src": "970:99:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 151,
															"name": "bytesArray",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 118,
															"src": "1093:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 150,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1086:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": "string"
													},
													"id": 152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1086:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 98,
												"id": 153,
												"nodeType": "Return",
												"src": "1079:25:0"
											}
										]
									},
									"documentation": null,
									"id": 155,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "bytes32ToString",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"name": "_bytes32",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "759:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 93,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "759:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "758:18:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "799:6:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 96,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "799:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "798:15:0"
									},
									"scope": 185,
									"src": "734:378:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 183,
										"nodeType": "Block",
										"src": "1174:143:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 162,
																"name": "product",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 12,
																"src": "1189:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Product_$10_storage",
																	"typeString": "struct Production.Product storage ref"
																}
															},
															"id": 163,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "serialNo",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4,
															"src": "1189:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																"typeString": "bytes32[] storage ref"
															}
														},
														"id": 165,
														"indexExpression": {
															"argumentTypes": null,
															"id": 164,
															"name": "Num",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 157,
															"src": "1206:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1189:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"id": 166,
														"name": "regSer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "1214:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "1189:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 182,
												"nodeType": "IfStatement",
												"src": "1185:125:0",
												"trueBody": {
													"id": 181,
													"nodeType": "Block",
													"src": "1222:88:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 173,
																		"name": "regSer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 159,
																		"src": "1261:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 168,
																			"name": "product",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 12,
																			"src": "1237:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Product_$10_storage",
																				"typeString": "struct Production.Product storage ref"
																			}
																		},
																		"id": 171,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "registered",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 7,
																		"src": "1237:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 172,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1237:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_bytes32_$returns$_t_uint256_$",
																		"typeString": "function (bytes32) returns (uint256)"
																	}
																},
																"id": 174,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1237:31:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 175,
															"nodeType": "ExpressionStatement",
															"src": "1237:31:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 179,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "1283:15:0",
																"subExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 176,
																		"name": "product",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 12,
																		"src": "1283:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Product_$10_storage",
																			"typeString": "struct Production.Product storage ref"
																		}
																	},
																	"id": 178,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "regNo",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 9,
																	"src": "1283:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 180,
															"nodeType": "ExpressionStatement",
															"src": "1283:15:0"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 184,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "regWarranty",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 157,
												"name": "Num",
												"nodeType": "VariableDeclaration",
												"scope": 184,
												"src": "1141:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1141:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 159,
												"name": "regSer",
												"nodeType": "VariableDeclaration",
												"scope": 184,
												"src": "1151:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 158,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1151:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1140:26:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1174:0:0"
									},
									"scope": 185,
									"src": "1120:197:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 186,
							"src": "28:1292:0"
						}
					],
					"src": "0:1320:0"
				},
				"id": 0
			}
		}
	}
}